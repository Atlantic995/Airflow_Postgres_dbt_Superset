{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.0", "generated_at": "2025-10-08T13:15:02.248838Z", "invocation_id": "c98d7a24-4b27-4f5b-9c0f-8d02c4fc5b92", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-08T13:14:55.370903Z", "completed_at": "2025-10-08T13:14:55.507448Z"}, {"name": "execute", "started_at": "2025-10-08T13:14:55.521271Z", "completed_at": "2025-10-08T13:14:58.586237Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.2809064388275146, "adapter_response": {"_message": "SELECT 17", "code": "SELECT", "rows_affected": 17}, "message": "SELECT 17", "failures": null, "unique_id": "model.my_project.stg_weather_data", "compiled": true, "compiled_code": "\n\nwith source as (SELECT *\nFROM \"db\".\"dev\".\"raw_weather_data\"),\n\nde_dup AS (\n    SELECT \n    *,\n    row_number() OVER(PARTITION BY TIME ORDER BY inserted_at) AS rn\n    FROM source\n)\n\n\nSELECT\n    id,\n    city,\n    temperature,\n    weather_descriptions,\n    wind_speed,\n    TIME AS weather_time_local,\n    (inserted_at + (utc_offset || 'hours')::interval) AS inserted_at_local\nFROM de_dup \nWHERE rn = 1", "relation_name": "\"db\".\"dev\".\"stg_weather_data\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-08T13:14:58.837292Z", "completed_at": "2025-10-08T13:14:58.921370Z"}, {"name": "execute", "started_at": "2025-10-08T13:14:58.925641Z", "completed_at": "2025-10-08T13:15:01.076587Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 2.298941135406494, "adapter_response": {"_message": "SELECT 17", "code": "SELECT", "rows_affected": 17}, "message": "SELECT 17", "failures": null, "unique_id": "model.my_project.weather_report", "compiled": true, "compiled_code": "\n\nSELECT \n    city,\n    temperature,\n    weather_descriptions,\n    wind_speed,\n    weather_time_local  \nFROM \"db\".\"dev\".\"stg_weather_data\"", "relation_name": "\"db\".\"dev\".\"weather_report\"", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-10-08T13:14:58.756446Z", "completed_at": "2025-10-08T13:14:58.854406Z"}, {"name": "execute", "started_at": "2025-10-08T13:14:58.856911Z", "completed_at": "2025-10-08T13:15:01.339448Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 2.8787238597869873, "adapter_response": {}, "message": "Database Error in model daily_average (models/mart/daily_average.sql)\n  relation \"daily_average__dbt_backup\" already exists\n  compiled code at target/run/my_project/models/mart/daily_average.sql", "failures": null, "unique_id": "model.my_project.daily_average", "compiled": true, "compiled_code": "\n\nSELECT\n    city,\n    DATE(weather_time_local) AS DATE,\n    ROUND(AVG(temperature)::numeric,2) AS avg_temperature,\n    ROUND(AVG(wind_speed)::numeric,2) AS avg_wind_speed\nFROM \"db\".\"dev\".\"stg_weather_data\"\nGROUP BY\n    city,\n    DATE(weather_time_local)\nORDER BY\n    city,\n    DATE(weather_time_local)", "relation_name": "\"db\".\"dev\".\"daily_average\"", "batch_results": null}], "elapsed_time": 11.755114793777466, "args": {"require_yaml_configuration_for_mf_time_spines": false, "show_resource_report": false, "skip_nodes_if_on_run_start_fails": false, "defer": false, "source_freshness_run_project_hooks": false, "macro_debugging": false, "exclude": [], "favor_state": false, "require_nested_cumulative_type_params": false, "require_explicit_package_overrides_for_builtin_materializations": true, "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "cache_selected_only": false, "introspect": true, "static_parser": true, "project_dir": "/usr/app", "empty": false, "profiles_dir": "/root/.dbt", "vars": {}, "partial_parse": true, "log_format": "default", "require_batched_execution_for_custom_microbatch_strategy": false, "log_level_file": "debug", "log_file_max_bytes": 10485760, "strict_mode": false, "log_format_file": "debug", "indirect_selection": "eager", "partial_parse_file_diff": true, "invocation_command": "dbt run", "use_colors": true, "state_modified_compare_more_unrendered_values": false, "print": true, "use_colors_file": true, "write_json": true, "send_anonymous_usage_stats": true, "log_level": "info", "printer_width": 80, "require_resource_names_without_spaces": false, "log_path": "/usr/app/logs", "select": [], "which": "run", "state_modified_compare_vars": false, "quiet": false}}